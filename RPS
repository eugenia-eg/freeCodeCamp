# The example function below keeps track of the opponent's history and plays whatever the opponent played two plays ago. It is not a very good player so you will need to change the code to pass the challenge.

import random


def player(prev_play, opponent_history=[]):
    # Update opponent history
    if prev_play:
        opponent_history.append(prev_play)

    # Analyze opponent's history to predict the next move
    n = 5  # Number of recent moves to consider
    recent_moves = ''.join(opponent_history[-n:])

    # Dictionary to count the occurrences of sequences followed by moves
    move_stats = {"R": 0, "P": 0, "S": 0}

    # Build statistics based on the opponent's recent history
    for i in range(len(opponent_history) - n):
        if ''.join(opponent_history[i:i + n]) == recent_moves:
            next_move = opponent_history[i + n]
            move_stats[next_move] += 1

    # Predict the opponent's next move
    if recent_moves and sum(move_stats.values()) > 0:
        predicted_move = max(move_stats, key=move_stats.get)
    else:
        predicted_move = random.choice(["R", "P", "S"])

    # Counter the predicted move
    counter_moves = {"R": "P", "P": "S", "S": "R"}
    return counter_moves[predicted_move]
